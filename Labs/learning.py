import matplotlibimport numpy as npimport randommatplotlib.use("TkAgg")import matplotlib.pyplot as pltimport matplotlib.animation as animationfrom mpl_toolkits.mplot3d.art3d import Poly3DCollection# ===============================#   ВЕРШИНИ ПІРАМІДИ (трикутна основа)# ===============================pyramid_vertices = np.array([    [0, 1, 0],    # верхівка    [-1, -1, 1],  # основа    [1, -1, 1],    [0, -1, -1]])pyramid_faces = [    [0, 1, 2],  # грань 1    [0, 2, 3],  # грань 2    [0, 3, 1],  # грань 3    [1, 2, 3]   # основа]# ===============================#   ФІГУРА# ===============================fig = plt.figure(figsize=(6, 6))ax3d = fig.add_subplot(111, projection="3d")ax3d.set_xlim(-4, 4)ax3d.set_ylim(-4, 4)ax3d.set_zlim(-4, 4)ax3d.set_box_aspect([1, 1, 1])# початковий об’єкт (порожній)pyramid_poly = None# ===============================#   АНІМАЦІЯ# ===============================def animate(i):    global pyramid_poly    # видаляємо попередню піраміду    if pyramid_poly is not None:        pyramid_poly.remove()    # випадкове зміщення    tx, ty, tz = random.uniform(-3, 3), random.uniform(-3, 3), random.uniform(-3, 3)    shifted_vertices = pyramid_vertices + np.array([tx, ty, tz])    # випадковий колір    color = random.choice(["red", "green", "blue", "orange", "purple", "cyan"])    # створюємо грані піраміди    verts = [[shifted_vertices[j] for j in face] for face in pyramid_faces]    pyramid_poly = Poly3DCollection(verts, alpha=0.6, facecolor=color, edgecolor="black")    ax3d.add_collection3d(pyramid_poly)    return []ani = animation.FuncAnimation(fig, animate, frames=1000, interval=400, blit=False)plt.show()